package bio.ferlab.clin.etl

import org.apache.spark.sql.SparkSession

object CreatePublicTables extends App {

  val Array(input) = args

  implicit val spark: SparkSession = SparkSession.builder
    .enableHiveSupport()
    .appName(s"Create Public Tables").getOrCreate()
  spark.sql("use clin")

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `clinvar` (
       |`chromosome` STRING,
       |  `start` BIGINT,
       |  `end` BIGINT,
       |  `name` STRING,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `clin_sig_original` ARRAY<STRING>,
       |  `clin_sig_conflict` ARRAY<STRING>,
       |  `filters` ARRAY<STRING>,
       |  `af_exac` DOUBLE,
       |  `clnvcso` STRING,
       |  `geneinfo` STRING,
       |  `clnsigincl` ARRAY<STRING>,
       |  `clnvi` ARRAY<STRING>,
       |  `clndisdb` ARRAY<STRING>,
       |  `clnrevstat` ARRAY<STRING>,
       |  `clndn` ARRAY<STRING>,
       |  `alleleid` INT,
       |  `origin` ARRAY<STRING>,
       |  `ssr` INT,
       |  `clndnincl` ARRAY<STRING>,
       |  `rs` ARRAY<STRING>,
       |  `dbvarid` ARRAY<STRING>,
       |  `af_tgp` DOUBLE,
       |  `clnvc` STRING,
       |  `clnhgvs` ARRAY<STRING>,
       |  `mc` ARRAY<STRING>,
       |  `af_esp` DOUBLE,
       |  `clndisdbincl` ARRAY<STRING>,
       |  `old_multiallelic` STRING,
       |  `clin_sig` ARRAY<STRING>
      |)
      |USING parquet
      |LOCATION '$input/clinvar'
      |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `dbsnp` (
      |   `chromosome` string,
      |   `start` bigint,
      |   `reference` string,
      |   `alternate` string,
      |   `end` bigint,
      |   `name` string,
      |   `original_contig_name` string
      |)
      |USING parquet
      |LOCATION '$input/dbsnp'
      |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `topmed_bravo` (
       |  `chromosome` STRING,
       |  `start` BIGINT,
       |  `end` BIGINT,
       |  `name` STRING,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `ac` INT,
       |  `af` DOUBLE,
       |  `an` INT,
       |  `hom` INT,
       |  `het` INT,
       |  `qual` DOUBLE,
       |  `filters` ARRAY<STRING>,
       |  `qual_filter` STRING
       |)
       |USING parquet
       |LOCATION '$input/topmed_bravo'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `gnomad_genomes_3_0` (
       |  `chromosome` STRING,
       |  `start` INT,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `asj_female_ac` INT,
       |  `asj_female_an` INT,
       |  `asj_female_af` DOUBLE,
       |  `asj_female_hom` INT,
       |  `eas_female_ac` INT,
       |  `eas_female_an` INT,
       |  `eas_female_af` DOUBLE,
       |  `eas_female_hom` INT,
       |  `afr_male_ac` INT,
       |  `afr_male_an` INT,
       |  `afr_male_af` DOUBLE,
       |  `afr_male_hom` INT,
       |  `female_ac` INT,
       |  `female_an` INT,
       |  `female_af` DOUBLE,
       |  `female_hom` INT,
       |  `fin_male_ac` INT,
       |  `fin_male_an` INT,
       |  `fin_male_af` DOUBLE,
       |  `fin_male_hom` INT,
       |  `oth_female_ac` INT,
       |  `oth_female_an` INT,
       |  `oth_female_af` DOUBLE,
       |  `oth_female_hom` INT,
       |  `ami_ac` INT,
       |  `ami_an` INT,
       |  `ami_af` DOUBLE,
       |  `ami_hom` INT,
       |  `oth_ac` INT,
       |  `oth_an` INT,
       |  `oth_af` DOUBLE,
       |  `oth_hom` INT,
       |  `male_ac` INT,
       |  `male_an` INT,
       |  `male_af` DOUBLE,
       |  `male_hom` INT,
       |  `ami_female_ac` INT,
       |  `ami_female_an` INT,
       |  `ami_female_af` DOUBLE,
       |  `ami_female_hom` INT,
       |  `afr_ac` INT,
       |  `afr_an` INT,
       |  `afr_af` DOUBLE,
       |  `afr_hom` INT,
       |  `eas_male_ac` INT,
       |  `eas_male_an` INT,
       |  `eas_male_af` DOUBLE,
       |  `eas_male_hom` INT,
       |  `sas_ac` INT,
       |  `sas_an` INT,
       |  `sas_af` DOUBLE,
       |  `sas_hom` INT,
       |  `nfe_female_ac` INT,
       |  `nfe_female_an` INT,
       |  `nfe_female_af` DOUBLE,
       |  `nfe_female_hom` INT,
       |  `asj_male_ac` INT,
       |  `asj_male_an` INT,
       |  `asj_male_af` DOUBLE,
       |  `asj_male_hom` INT,
       |  `raw_ac` INT,
       |  `raw_an` INT,
       |  `raw_af` DOUBLE,
       |  `raw_hom` INT,
       |  `oth_male_ac` INT,
       |  `oth_male_an` INT,
       |  `oth_male_af` DOUBLE,
       |  `oth_male_hom` INT,
       |  `nfe_male_ac` INT,
       |  `nfe_male_an` INT,
       |  `nfe_male_af` DOUBLE,
       |  `nfe_male_hom` INT,
       |  `asj_ac` INT,
       |  `asj_an` INT,
       |  `asj_af` DOUBLE,
       |  `asj_hom` INT,
       |  `amr_male_ac` INT,
       |  `amr_male_an` INT,
       |  `amr_male_af` DOUBLE,
       |  `amr_male_hom` INT,
       |  `ac` INT,
       |  `an` INT,
       |  `af` DOUBLE,
       |  `hom` INT,
       |  `amr_female_ac` INT,
       |  `amr_female_an` INT,
       |  `amr_female_af` DOUBLE,
       |  `amr_female_hom` INT,
       |  `sas_female_ac` INT,
       |  `sas_female_an` INT,
       |  `sas_female_af` DOUBLE,
       |  `sas_female_hom` INT,
       |  `fin_ac` INT,
       |  `fin_an` INT,
       |  `fin_af` DOUBLE,
       |  `fin_hom` INT,
       |  `afr_female_ac` INT,
       |  `afr_female_an` INT,
       |  `afr_female_af` DOUBLE,
       |  `afr_female_hom` INT,
       |  `sas_male_ac` INT,
       |  `sas_male_an` INT,
       |  `sas_male_af` DOUBLE,
       |  `sas_male_hom` INT,
       |  `amr_ac` INT,
       |  `amr_an` INT,
       |  `amr_af` DOUBLE,
       |  `amr_hom` INT,
       |  `nfe_ac` INT,
       |  `nfe_an` INT,
       |  `nfe_af` DOUBLE,
       |  `nfe_hom` INT,
       |  `eas_ac` INT,
       |  `eas_an` INT,
       |  `eas_af` DOUBLE,
       |  `eas_hom` INT,
       |  `ami_male_ac` INT,
       |  `ami_male_an` INT,
       |  `ami_male_af` DOUBLE,
       |  `ami_male_hom` INT,
       |  `fin_female_ac` INT,
       |  `fin_female_an` INT,
       |  `fin_female_af` DOUBLE,
       |  `fin_female_hom` INT
       |)
       |USING parquet
       |LOCATION '$input/gnomad/gnomad_genomes_3.0'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `gnomad_exomes_2_1_1_liftover_grch38` (
       |  `chromosome` STRING,
       |  `start` INT,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `nfe_seu_ac` INT,
       |  `nfe_seu_an` INT,
       |  `nfe_seu_af` DOUBLE,
       |  `nfe_seu_hom` INT,
       |  `fin_female_ac` INT,
       |  `fin_female_an` INT,
       |  `fin_female_af` DOUBLE,
       |  `fin_female_hom` INT,
       |  `nfe_bgr_ac` INT,
       |  `nfe_bgr_an` INT,
       |  `nfe_bgr_af` DOUBLE,
       |  `nfe_bgr_hom` INT,
       |  `sas_male_ac` INT,
       |  `sas_male_an` INT,
       |  `sas_male_af` DOUBLE,
       |  `sas_male_hom` INT,
       |  `afr_male_ac` INT,
       |  `afr_male_an` INT,
       |  `afr_male_af` DOUBLE,
       |  `afr_male_hom` INT,
       |  `afr_ac` INT,
       |  `afr_an` INT,
       |  `afr_af` DOUBLE,
       |  `afr_hom` INT,
       |  `eas_female_ac` INT,
       |  `eas_female_an` INT,
       |  `eas_female_af` DOUBLE,
       |  `eas_female_hom` INT,
       |  `afr_female_ac` INT,
       |  `afr_female_an` INT,
       |  `afr_female_af` DOUBLE,
       |  `afr_female_hom` INT,
       |  `sas_ac` INT,
       |  `sas_an` INT,
       |  `sas_af` DOUBLE,
       |  `sas_hom` INT,
       |  `nfe_onf_ac` INT,
       |  `nfe_onf_an` INT,
       |  `nfe_onf_af` DOUBLE,
       |  `nfe_onf_hom` INT,
       |  `fin_male_ac` INT,
       |  `fin_male_an` INT,
       |  `fin_male_af` DOUBLE,
       |  `fin_male_hom` INT,
       |  `nfe_female_ac` INT,
       |  `nfe_female_an` INT,
       |  `nfe_female_af` DOUBLE,
       |  `nfe_female_hom` INT,
       |  `amr_ac` INT,
       |  `amr_an` INT,
       |  `amr_af` DOUBLE,
       |  `amr_hom` INT,
       |  `eas_ac` INT,
       |  `eas_an` INT,
       |  `eas_af` DOUBLE,
       |  `eas_hom` INT,
       |  `ac` INT,
       |  `an` INT,
       |  `af` DOUBLE,
       |  `hom` INT,
       |  `asj_male_ac` INT,
       |  `asj_male_an` INT,
       |  `asj_male_af` DOUBLE,
       |  `asj_male_hom` INT,
       |  `oth_female_ac` INT,
       |  `oth_female_an` INT,
       |  `oth_female_af` DOUBLE,
       |  `oth_female_hom` INT,
       |  `nfe_swe_ac` INT,
       |  `nfe_swe_an` INT,
       |  `nfe_swe_af` DOUBLE,
       |  `nfe_swe_hom` INT,
       |  `nfe_nwe_ac` INT,
       |  `nfe_nwe_an` INT,
       |  `nfe_nwe_af` DOUBLE,
       |  `nfe_nwe_hom` INT,
       |  `eas_jpn_ac` INT,
       |  `eas_jpn_an` INT,
       |  `eas_jpn_af` DOUBLE,
       |  `eas_jpn_hom` INT,
       |  `female_ac` INT,
       |  `female_an` INT,
       |  `female_af` DOUBLE,
       |  `female_hom` INT,
       |  `eas_kor_ac` INT,
       |  `eas_kor_an` INT,
       |  `eas_kor_af` DOUBLE,
       |  `eas_kor_hom` INT,
       |  `eas_oea_ac` INT,
       |  `eas_oea_an` INT,
       |  `eas_oea_af` DOUBLE,
       |  `eas_oea_hom` INT,
       |  `nfe_est_ac` INT,
       |  `nfe_est_an` INT,
       |  `nfe_est_af` DOUBLE,
       |  `nfe_est_hom` INT,
       |  `eas_male_ac` INT,
       |  `eas_male_an` INT,
       |  `eas_male_af` DOUBLE,
       |  `eas_male_hom` INT,
       |  `nfe_ac` INT,
       |  `nfe_an` INT,
       |  `nfe_af` DOUBLE,
       |  `nfe_hom` INT,
       |  `fin_ac` INT,
       |  `fin_an` INT,
       |  `fin_af` DOUBLE,
       |  `fin_hom` INT,
       |  `nfe_male_ac` INT,
       |  `nfe_male_an` INT,
       |  `nfe_male_af` DOUBLE,
       |  `nfe_male_hom` INT,
       |  `sas_female_ac` INT,
       |  `sas_female_an` INT,
       |  `sas_female_af` DOUBLE,
       |  `sas_female_hom` INT,
       |  `asj_female_ac` INT,
       |  `asj_female_an` INT,
       |  `asj_female_af` DOUBLE,
       |  `asj_female_hom` INT,
       |  `asj_ac` INT,
       |  `asj_an` INT,
       |  `asj_af` DOUBLE,
       |  `asj_hom` INT,
       |  `oth_ac` INT,
       |  `oth_an` INT,
       |  `oth_af` DOUBLE,
       |  `oth_hom` INT,
       |  `male_ac` INT,
       |  `male_an` INT,
       |  `male_af` DOUBLE,
       |  `male_hom` INT,
       |  `amr_male_ac` INT,
       |  `amr_male_an` INT,
       |  `amr_male_af` DOUBLE,
       |  `amr_male_hom` INT,
       |  `amr_female_ac` INT,
       |  `amr_female_an` INT,
       |  `amr_female_af` DOUBLE,
       |  `amr_female_hom` INT,
       |  `oth_male_ac` INT,
       |  `oth_male_an` INT,
       |  `oth_male_af` DOUBLE,
       |  `oth_male_hom` INT
       |)
       |USING parquet
       |LOCATION '$input/gnomad/gnomad_exomes_2.1.1_liftover_grch38'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `gnomad_genomes_2_1_1_liftover_grch38` (
       |  `chromosome` STRING,
       |  `start` INT,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `nfe_seu_ac` INT,
       |  `nfe_seu_an` INT,
       |  `nfe_seu_af` DOUBLE,
       |  `nfe_seu_hom` INT,
       |  `fin_female_ac` INT,
       |  `fin_female_an` INT,
       |  `fin_female_af` DOUBLE,
       |  `fin_female_hom` INT,
       |  `afr_male_ac` INT,
       |  `afr_male_an` INT,
       |  `afr_male_af` DOUBLE,
       |  `afr_male_hom` INT,
       |  `afr_ac` INT,
       |  `afr_an` INT,
       |  `afr_af` DOUBLE,
       |  `afr_hom` INT,
       |  `eas_female_ac` INT,
       |  `eas_female_an` INT,
       |  `eas_female_af` DOUBLE,
       |  `eas_female_hom` INT,
       |  `afr_female_ac` INT,
       |  `afr_female_an` INT,
       |  `afr_female_af` DOUBLE,
       |  `afr_female_hom` INT,
       |  `nfe_onf_ac` INT,
       |  `nfe_onf_an` INT,
       |  `nfe_onf_af` DOUBLE,
       |  `nfe_onf_hom` INT,
       |  `fin_male_ac` INT,
       |  `fin_male_an` INT,
       |  `fin_male_af` DOUBLE,
       |  `fin_male_hom` INT,
       |  `nfe_female_ac` INT,
       |  `nfe_female_an` INT,
       |  `nfe_female_af` DOUBLE,
       |  `nfe_female_hom` INT,
       |  `amr_ac` INT,
       |  `amr_an` INT,
       |  `amr_af` DOUBLE,
       |  `amr_hom` INT,
       |  `eas_ac` INT,
       |  `eas_an` INT,
       |  `eas_af` DOUBLE,
       |  `eas_hom` INT,
       |  `ac` INT,
       |  `an` INT,
       |  `af` DOUBLE,
       |  `hom` INT,
       |  `asj_male_ac` INT,
       |  `asj_male_an` INT,
       |  `asj_male_af` DOUBLE,
       |  `asj_male_hom` INT,
       |  `oth_female_ac` INT,
       |  `oth_female_an` INT,
       |  `oth_female_af` DOUBLE,
       |  `oth_female_hom` INT,
       |  `nfe_nwe_ac` INT,
       |  `nfe_nwe_an` INT,
       |  `nfe_nwe_af` DOUBLE,
       |  `nfe_nwe_hom` INT,
       |  `female_ac` INT,
       |  `female_an` INT,
       |  `female_af` DOUBLE,
       |  `female_hom` INT,
       |  `nfe_est_ac` INT,
       |  `nfe_est_an` INT,
       |  `nfe_est_af` DOUBLE,
       |  `nfe_est_hom` INT,
       |  `eas_male_ac` INT,
       |  `eas_male_an` INT,
       |  `eas_male_af` DOUBLE,
       |  `eas_male_hom` INT,
       |  `nfe_ac` INT,
       |  `nfe_an` INT,
       |  `nfe_af` DOUBLE,
       |  `nfe_hom` INT,
       |  `fin_ac` INT,
       |  `fin_an` INT,
       |  `fin_af` DOUBLE,
       |  `fin_hom` INT,
       |  `nfe_male_ac` INT,
       |  `nfe_male_an` INT,
       |  `nfe_male_af` DOUBLE,
       |  `nfe_male_hom` INT,
       |  `asj_female_ac` INT,
       |  `asj_female_an` INT,
       |  `asj_female_af` DOUBLE,
       |  `asj_female_hom` INT,
       |  `asj_ac` INT,
       |  `asj_an` INT,
       |  `asj_af` DOUBLE,
       |  `asj_hom` INT,
       |  `oth_ac` INT,
       |  `oth_an` INT,
       |  `oth_af` DOUBLE,
       |  `oth_hom` INT,
       |  `male_ac` INT,
       |  `male_an` INT,
       |  `male_af` DOUBLE,
       |  `male_hom` INT,
       |  `amr_male_ac` INT,
       |  `amr_male_an` INT,
       |  `amr_male_af` DOUBLE,
       |  `amr_male_hom` INT,
       |  `amr_female_ac` INT,
       |  `amr_female_an` INT,
       |  `amr_female_af` DOUBLE,
       |  `amr_female_hom` INT,
       |  `oth_male_ac` INT,
       |  `oth_male_an` INT,
       |  `oth_male_af` DOUBLE,
       |  `oth_male_hom` INT
       |)
       |USING parquet
       |LOCATION '$input/gnomad/gnomad_genomes_2.1.1_liftover_grch38'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `1000_genomes` (
       |  `chromosome` STRING,
       |  `start` BIGINT,
       |  `end` BIGINT,
       |  `name` STRING,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `ac` INT,
       |  `af` DOUBLE,
       |  `an` INT,
       |  `afr_af` DOUBLE,
       |  `eur_af` DOUBLE,
       |  `sas_af` DOUBLE,
       |  `amr_af` DOUBLE,
       |  `eas_af` DOUBLE,
       |  `dp` INT
       |)
       |USING parquet
       |LOCATION '$input/1000_genomes'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `dbnsfp_original` (
       |  `start` STRING,
       |  `reference` STRING,
       |  `alternate` STRING,
       |  `aaref` STRING,
       |  `symbol` STRING,
       |  `ensembl_gene_id` STRING,
       |  `ensembl_protein_id` STRING,
       |  `VEP_canonical` STRING,
       |  `ensembl_transcript_id` STRING,
       |  `cds_strand` STRING,
       |  `SIFT_score` DOUBLE,
       |  `SIFT_pred` STRING,
       |  `SIFT_converted_rankscore` DOUBLE,
       |  `Polyphen2_HDIV_score` DOUBLE,
       |  `Polyphen2_HDIV_pred` STRING,
       |  `Polyphen2_HDIV_rankscore` DOUBLE,
       |  `Polyphen2_HVAR_score` DOUBLE,
       |  `Polyphen2_HVAR_pred` STRING,
       |  `Polyphen2_HVAR_rankscore` DOUBLE,
       |  `FATHMM_score` DOUBLE,
       |  `FATHMM_pred` STRING,
       |  `FATHMM_converted_rankscore` DOUBLE,
       |  `CADD_raw` DOUBLE,
       |  `CADD_raw_rankscore` DOUBLE,
       |  `CADD_phred` DOUBLE,
       |  `DANN_score` DOUBLE,
       |  `DANN_rankscore` DOUBLE,
       |  `REVEL_rankscore` DOUBLE,
       |  `LRT_converted_rankscore` DOUBLE,
       |  `LRT_pred` STRING,
       |  `phyloP100way_vertebrate` DOUBLE,
       |  `phyloP100way_vertebrate_rankscore` DOUBLE,
       |  `phyloP30way_mammalian` DOUBLE,
       |  `phyloP30way_mammalian_rankscore` DOUBLE,
       |  `phyloP17way_primate` DOUBLE,
       |  `phyloP17way_primate_rankscore` DOUBLE,
       |  `phastCons100way_vertebrate` DOUBLE,
       |  `phastCons100way_vertebrate_rankscore` DOUBLE,
       |  `phastcons30way_mammalian` DOUBLE,
       |  `phastCons30way_mammalian_rankscore` DOUBLE,
       |  `phastCons17way_primate` DOUBLE,
       |  `phastCons17way_primate_rankscore` DOUBLE,
       |  `GERP++_NR` DOUBLE,
       |  `GERP++_RS` DOUBLE,
       |  `GERP++_RS_rankscore` DOUBLE,
       |  `MutPred_rankscore` DOUBLE,
       |  `MutPred_score` DOUBLE,
       |  `MutationAssessor_pred` STRING,
       |  `MutationAssessor_score` DOUBLE,
       |  `MutationAssessor_rankscore` DOUBLE,
       |  `MutationTaster_converted_rankscore` DOUBLE,
       |  `PROVEAN_pred` STRING,
       |  `PROVEAN_score` DOUBLE,
       |  `PROVEAN_converted_rankscore` DOUBLE,
       |  `VEST4_score` DOUBLE,
       |  `VEST4_rankscore` DOUBLE,
       |  `MetaSVM_pred` STRING,
       |  `MetaSVM_rankscore` DOUBLE,
       |  `MetaSVM_score` DOUBLE,
       |  `MetaLR_pred` STRING,
       |  `MetaLR_rankscore` DOUBLE,
       |  `MetaLR_score` DOUBLE,
       |  `M-CAP_pred` STRING,
       |  `M-CAP_score` DOUBLE,
       |  `M-CAP_rankscore` DOUBLE,
       |  `MPC_score` DOUBLE,
       |  `MPC_rankscore` DOUBLE,
       |  `MVP_score` DOUBLE,
       |  `MVP_rankscore` DOUBLE,
       |  `PrimateAI_pred` STRING,
       |  `PrimateAI_rankscore` DOUBLE,
       |  `PrimateAI_score` DOUBLE,
       |  `DEOGEN2_pred` STRING,
       |  `DEOGEN2_score` DOUBLE,
       |  `DEOGEN2_rankscore` DOUBLE,
       |  `BayesDel_addAF_pred` STRING,
       |  `BayesDel_addAF_rankscore` DOUBLE,
       |  `BayesDel_addAF_score` DOUBLE,
       |  `BayesDel_noAF_pred` STRING,
       |  `BayesDel_noAF_rankscore` DOUBLE,
       |  `BayesDel_noAF_score` DOUBLE,
       |  `ClinPred_pred` STRING,
       |  `ClinPred_rankscore` DOUBLE,
       |  `ClinPred_score` DOUBLE,
       |  `LIST-S2_pred` STRING,
       |  `LIST-S2_score` DOUBLE,
       |  `LIST-S2_rankscore` DOUBLE,
       |  `fathmm-MKL_coding_pred` STRING,
       |  `fathmm-MKL_coding_rankscore` DOUBLE,
       |  `fathmm-MKL_coding_score` DOUBLE,
       |  `fathmm-MKL_coding_group` STRING,
       |  `fathmm-XF_coding_pred` STRING,
       |  `fathmm-XF_coding_rankscore` DOUBLE,
       |  `fathmm-XF_coding_score` DOUBLE,
       |  `Eigen-PC-phred_coding` DOUBLE,
       |  `Eigen-PC-raw_coding` DOUBLE,
       |  `Eigen-PC-raw_coding_rankscore` DOUBLE,
       |  `Eigen-phred_coding` DOUBLE,
       |  `Eigen-raw_coding` DOUBLE,
       |  `Eigen-raw_coding_rankscore` DOUBLE,
       |  `GenoCanyon_rankscore` DOUBLE,
       |  `GenoCanyon_score` DOUBLE,
       |  `integrated_confidence_value` DOUBLE,
       |  `integrated_fitCons_rankscore` DOUBLE,
       |  `integrated_fitCons_score` DOUBLE,
       |  `GM12878_confidence_value` DOUBLE,
       |  `GM12878_fitCons_rankscore` DOUBLE,
       |  `GM12878_fitCons_score` DOUBLE,
       |  `H1-hESC_confidence_value` DOUBLE,
       |  `H1-hESC_fitCons_rankscore` DOUBLE,
       |  `H1-hESC_fitCons_score` DOUBLE,
       |  `HUVEC_confidence_value` DOUBLE,
       |  `HUVEC_fitCons_rankscore` DOUBLE,
       |  `HUVEC_fitCons_score` DOUBLE,
       |  `LINSIGHT` DOUBLE,
       |  `LINSIGHT_rankscore` DOUBLE,
       |  `bStatistic` DOUBLE,
       |  `bStatistic_converted_rankscore` DOUBLE,
       |  `Interpro_domain` STRING,
       |  `GTEx_V8_gene` ARRAY<STRING>,
       |  `GTEx_V8_tissue` ARRAY<STRING>,
       |  `chromosome` STRING)
       |USING parquet
       |PARTITIONED BY (chromosome)
       |LOCATION '$input/dbnsfp/scores'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `human_genes` (
       |  `tax_id` int,
       |  `entrez_gene_id` int,
       |  `symbol` string,
       |  `locus_tag` string,
       |  `synonyms` array<string>,
       |  `external_references` map<string,string>,
       |  `chromosome` string,
       |  `map_location` string,
       |  `description` string,
       |  `type_of_gene` string,
       |  `symbol_from_nomenclature_authority` string,
       |  `full_name_from_nomenclature_authority` string,
       |  `nomenclature_status` string,
       |  `other_designations` array<string>,
       |  `feature_types` map<string,string>,
       |  `ensembl_gene_id` string,
       |  `omim_gene_id` string
       |)
       |USING parquet
       |LOCATION '$input/human_genes'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `orphanet_gene_set` (
       |  `disorder_id` int,
       |  `orpha_number` int,
       |  `expert_link` string,
       |  `name` string,
       |  `disorder_type` string,
       |  `disorder_group` string,
       |  `gene_symbol` string,
       |  `ensembl_gene_id` string,
       |  `association_type` string,
       |  `association_type_id` int,
       |  `status` string
       |)
       |USING parquet
       |LOCATION '$input/orphanet_gene_set'
       |""".stripMargin)

  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `hpo_gene_set` (
       |  `entrez_gene_id` int,
       |  `symbol` string,
       |  `hpo_term_id` string,
       |  `hpo_term_name` string,
       |  `frequency_raw` string,
       |  `frequency_hpo` string,
       |  `source_info` string,
       |  `source` string,
       |  `source_id` string,
       |  `ensembl_gene_id` string
       |)
       |USING parquet
       |LOCATION '$input/hpo_gene_set'
       |""".stripMargin)
  spark.sql(
    s"""CREATE TABLE IF NOT EXISTS `omim_gene_set` (
       |  `chromosome` STRING,
       |  `start` INT,
       |  `end` INT,
       |  `cypto_location` STRING,
       |  `computed_cypto_location` STRING,
       |  `omim_gene_id` INT,
       |  `symbols` ARRAY<STRING>,
       |  `name` STRING,
       |  `approved_symbol` STRING,
       |  `entrez_gene_id` INT,
       |  `ensembl_gene_id` STRING,
       |  `comments` STRING,
       |  `phenotype` STRUCT<`name`: STRING, `omim_id`: STRING, `inheritance`: ARRAY<STRING>>
       |)
       |USING parquet
       |LOCATION '$input/omim_gene_set'
       |""".stripMargin)

}

